import React, { useState, useEffect } from 'react';

const Card = ({ card, index, handleCardClick }) => {
  const [flipped, setFlipped] = useState(false);

  const handleClick = () => {
    if (!flipped) {
      setFlipped(true);
      handleCardClick(index);
    }
  };

  useEffect(() => {
    setFlipped(false); // Kartlar başlangıçta kapalı olacak şekilde ayarlanır
  }, [card]);

  return (
    <div className={`card ${flipped ? 'flipped' : ''}`} onClick={handleClick}>
      <div className="card-front">Ön Yüz</div>
      <div className="card-back">{card}</div>
    </div>
  );
};

const Game = () => {
  const [cards, setCards] = useState([]);
  const [flippedCards, setFlippedCards] = useState([]);
  const [matchedCards, setMatchedCards] = useState([]);

  useEffect(() => {
    const symbols = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']; // Simgelerin bir listesi

    // Kartları oluştur ve karıştır
    const initialCards = [...symbols, ...symbols].sort(() => Math.random() - 0.5);
    setCards(initialCards);
  }, []);

  const handleCardClick = (index) => {
    if (flippedCards.length === 0) {
      // İlk kartı çevir
      setFlippedCards([index]);
    } else if (flippedCards.length === 1) {
      // İkinci kartı çevir ve eşleşme kontrolü yap
      const newFlippedCards = [...flippedCards, index];
      setFlippedCards(newFlippedCards);

      const [firstCard, secondCard] = newFlippedCards;
      if (cards[firstCard] === cards[secondCard]) {
        // Eşleşme var
        setMatchedCards([...matchedCards, firstCard, secondCard]);
        setFlippedCards([]);
      } else {
        // Eşleşme yok, kartları geri çevir
        setTimeout(() => {
          setFlippedCards([]);
        }, 1000);
      }
    }
  };

  return (
    <div className="game">
      <div className="cards">
        {cards.map((card, index) => (
          <Card
            key={index}
            card={card}
            index={index}
            handleCardClick={handleCardClick}
          />
        ))}
      </div>
    </div>
  );
};

export default Game;


Yukarıdaki örnek kod, React kullanarak basit bir hafıza oyunu oluşturmanıza yardımcı olacaktır.
Kodda, Card bileşeni kartları temsil ederken, Game bileşeni oyunun ana mantığını kontrol eder.
Kartları oluşturmak, kartları çevirmek, eşleşme kontrolü yapmak ve puanlama gibi temel işlemler yer almaktadır.
