import React, { useState, useEffect } from 'react';

const Card = ({ card, index, handleCardClick }) => {
  const [flipped, setFlipped] = useState(false);

  const handleClick = () => {
    if (!flipped) {
      setFlipped(true);
      handleCardClick(index);
    }
  };

  useEffect(() => {
    setFlipped(false); // Kartlar başlangıçta kapalı olacak şekilde ayarlanır
  }, [card]);

  return (
    <div className={`card ${flipped ? 'flipped' : ''}`} onClick={handleClick}>
      <div className="card-front">Ön Yüz</div>
      <div className="card-back">{card}</div>
    </div>
  );
};

const Game = () => {
  const [cards, setCards] = useState([]);
  const [flippedCards, setFlippedCards] = useState([]);
  const [matchedCards, setMatchedCards] = useState([]);

  useEffect(() => {
    const symbols = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']; // Simgelerin bir listesi

    // Kartları oluştur ve karıştır
    const initialCards = [...symbols, ...symbols].sort(() => Math.random() - 0.5);
    setCards(initialCards);
  }, []);

  const handleCardClick = (index) => {
    if (flippedCards.length === 0) {
      // İlk kartı çevir
      setFlippedCards([index]);
    } else if (flippedCards.length === 1) {
      // İkinci kartı çevir ve eşleşme kontrolü yap
      const newFlippedCards = [...flippedCards, index];
      setFlippedCards(newFlippedCards);

      const [firstCard, secondCard] = newFlippedCards;
      if (cards[firstCard] === cards[secondCard]) {
        // Eşleşme var
        setMatchedCards([...matchedCards, firstCard, secondCard]);
        setFlippedCards([]);
      } else {
        // Eşleşme yok, kartları geri çevir
        setTimeout(() => {
          setFlippedCards([]);
        }, 1000);
      }
    }
  };

  return (
    <div className="game">
      <div className="cards">
        {cards.map((card, index) => (
          <Card
            key={index}
            card={card}
            index={index}
            handleCardClick={handleCardClick}
          />
        ))}
      </div>
    </div>
  );
};

export default Game;


Öncelikle, Node.js'i bilgisayarınıza yükleyin. Node.js, JavaScript çalıştırmak ve paket yönetimi yapmak için kullanılan bir platformdur.

Ardından, bir komut satırı (terminal) açın ve projenizi oluşturmak için aşağıdaki komutu girin:
npx create-react-app my-project
Yukarıdaki komut, "my-project" adında bir React projesi oluşturur.
Projenizi oluşturduktan sonra, Visual Studio Code'u açın ve projenin olduğu dizini açın. Bunun için VS Code menüsünde "File" > "Open Folder" seçeneğini kullanabilirsiniz.
VS Code terminalini açmak için menüden "View" > "Terminal" seçeneğini seçin.
Terminalde, aşağıdaki komutu girin:
npm start
Bu komut, React uygulamanızı başlatır ve tarayıcınızda otomatik olarak açılır. Projenizdeki değişiklikleri yaptıkça, tarayıcıda canlı olarak görüntülenecektir.
Bu adımları izledikten sonra, React projesini geliştirmek için VS Code'u kullanabilirsiniz. Yukarıdaki örneği de projenize ekleyebilir ve çalıştırabilirsiniz.

Unutmayın, React projeleri genellikle bağımlılıkların yönetildiği bir paket yöneticisi olan npm veya Yarn kullanır.
Projenizi geliştirirken ilgili bağımlılıkları yüklemeniz ve paketleri yönetmeniz gerekecektir.
